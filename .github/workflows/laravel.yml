name: Laravel

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  code-lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        php-version: '8.3'
    - uses: actions/checkout@v4
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Run the linter
      run: vendor/bin/pint --test

  laravel-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        php-version: '8.3'
    - uses: actions/checkout@v4
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: |
        composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        npm install
        npm run build
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Execute tests (Unit and Feature tests) via Pest
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/pest

#  deploy:
#    name: deploy
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        node-version: [18.x]
#    steps:
#      - uses: actions/checkout@v3
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v3
#        with:
#          node-version: ${{ matrix.node-version }}
#      - run: npm ci
#      - name: serverless deploy
#        uses: serverless/github-action@v3.2
#        with:
#          args: -c "serverless plugin install --name <plugin-name> && serverless deploy"
#          entrypoint: /bin/sh
#        env:
#          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
#          # or if using AWS credentials directly
#          # AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          # AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
